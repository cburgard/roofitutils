#!/bin/bash

# this document was written by Carsten Burgard (cburgard@cern.ch)

### INTRODUCTION ###

# This short README instructs you how to use RooFitUtils as a RootCore
# package.  In order to use this package in connection with RootCore,
# you need to setup a local RootCore version.

# This readme is written as a shell script, so instead of reading it, you can just call
#
#   bash README.RootCore
#
# and have the script do the installation for you (at your own risk).

### SETUP ###

# First, setup a suitable ROOT version

export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh
lsetup "root 6.04.16-HiggsComb-x86_64-slc6-gcc49-opt"

# create a directory where your RootCore should live

mkdir -p hcombrc
cd hcombrc

# next, download RootCore

TAG=$(svn ls svn+ssh://svn.cern.ch/reps/atlasoff/PhysicsAnalysis/D3PDTools/RootCore/tags | tail -n 1)
svn co svn+ssh://svn.cern.ch/reps/atlasoff/PhysicsAnalysis/D3PDTools/RootCore/tags/${TAG} RootCore

# call the RootCore setup

source RootCore/scripts/setup.sh

# check out RooFitUtils as well as any other packages you might need

svn co svn+ssh://svn.cern.ch/reps/atlasphys-hcmb/Physics/Higgs/combined/Tools/Combination/RooFitUtils RooFitUtils

# for example, you might want to make sure that you have AsgBoost installed

rc checkout_pkg atlasoff/AsgExternal/Asg_Boost/tags

# make RootCore search for packages

rc find_packages

# compile everything

rc compile

### TEST ###

# Performs a test workspace edit and print the edited workspace

root -b -q RooFitUtils/test/editws_test.C > mytest.log 2>&1

# The following diff should show no differences with a previous run.
# Log messages and workspace printout should be identical.
#
#     diff RooFitUtils/test/editws_test.log mytest.log

### USAGE ###

# If you executed the above commands via copy & paste, just also
# copy&paste these lines to have your final pieces of information
# printed.

echo "# Whenver you lost your shell, you can re-activate the environment by calling"
echo source $(pwd)/RootCore/local_setup.sh
echo "# Whenever you hae made local changes to your code, you should call"
echo "rc compile"

# The following binaries are automatically compiled by the package:

# Perform a full fit and likelihood scan
#
#    fit --input workspace.root --workspace combWS --data combData --poi mu [--profile muGGF,muVBF,...]
#
# Note: This C++ binary requires the AsgBoost package. For installation instructions, see above.
#
# Alternatively, you can also use the python-version of this macro,
# which does not require boost, but follows the same syntax:
#
#    scripts/fit.py --input workspace.root --workspace combWS --data combData --poi mu [--profile muGGF,muVBF,...]
#

# Perform a quick fit to obtain the best-fit-value of the POI
#
#    runMuhatQuick inFileName mypoi outFolder wsName [mcName] [dataName] [conditionalSnapshot]

# Combine workspaces with
#
#    share/combine.py
#
# The help message will inform you about inputs, arguments and usage.

# guess parameter correlations between different measurements using
#
#    share/guessCorrelations.py
#
# The help message will inform you about inputs, arguments and usage.
# Note: This python script requires additional packages. The help message will provide you with installation instructions.

#### ACKNOWLEDGEMENTS ###

# The code of this package is mostly the work of Stefan Gadatsch, Tim Adye, Lydia Brenner and Carsten Burgard.

